# coding: utf-8

"""
    Teleagronom

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FedcalculatorSetParameters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'c_k2': 'float',
        'c_n': 'float',
        'c_p': 'float',
        'c_ks': 'float',
        'c_kcl': 'float',
        'c_k3': 'float',
        'c_ca': 'float',
        'c_mg': 'float',
        'c_b': 'float',
        'c_cu': 'float',
        'c_k4': 'float',
        'c_zn': 'float',
        'c_mn': 'float',
        'c_fe': 'float',
        'c_k5': 'float',
        'c_mo': 'float',
        'c_co': 'float',
        'c_i': 'float',
        'c_k6': 'float',
        'd_k2': 'float',
        'd_n': 'float',
        'd_p': 'float',
        'd_ks': 'float',
        'd_kcl': 'float',
        'd_k3': 'float',
        'd_ca': 'float',
        'd_mg': 'float',
        'd_b': 'float',
        'd_cu': 'float',
        'd_k4': 'float',
        'd_zn': 'float',
        'd_mn': 'float',
        'd_fe': 'float',
        'd_k5': 'float',
        'd_mo': 'float',
        'd_co': 'float',
        'd_i': 'float',
        'd_k6': 'float'
    }

    attribute_map = {
        'c_k2': 'c_k2',
        'c_n': 'c_n',
        'c_p': 'c_p',
        'c_ks': 'c_ks',
        'c_kcl': 'c_kcl',
        'c_k3': 'c_k3',
        'c_ca': 'c_ca',
        'c_mg': 'c_mg',
        'c_b': 'c_b',
        'c_cu': 'c_cu',
        'c_k4': 'c_k4',
        'c_zn': 'c_zn',
        'c_mn': 'c_mn',
        'c_fe': 'c_fe',
        'c_k5': 'c_k5',
        'c_mo': 'c_mo',
        'c_co': 'c_co',
        'c_i': 'c_i',
        'c_k6': 'c_k6',
        'd_k2': 'd_k2',
        'd_n': 'd_n',
        'd_p': 'd_p',
        'd_ks': 'd_ks',
        'd_kcl': 'd_kcl',
        'd_k3': 'd_k3',
        'd_ca': 'd_ca',
        'd_mg': 'd_mg',
        'd_b': 'd_b',
        'd_cu': 'd_cu',
        'd_k4': 'd_k4',
        'd_zn': 'd_zn',
        'd_mn': 'd_mn',
        'd_fe': 'd_fe',
        'd_k5': 'd_k5',
        'd_mo': 'd_mo',
        'd_co': 'd_co',
        'd_i': 'd_i',
        'd_k6': 'd_k6'
    }

    def __init__(self, c_k2=None, c_n=None, c_p=None, c_ks=None, c_kcl=None, c_k3=None, c_ca=None, c_mg=None, c_b=None, c_cu=None, c_k4=None, c_zn=None, c_mn=None, c_fe=None, c_k5=None, c_mo=None, c_co=None, c_i=None, c_k6=None, d_k2=None, d_n=None, d_p=None, d_ks=None, d_kcl=None, d_k3=None, d_ca=None, d_mg=None, d_b=None, d_cu=None, d_k4=None, d_zn=None, d_mn=None, d_fe=None, d_k5=None, d_mo=None, d_co=None, d_i=None, d_k6=None):  # noqa: E501
        """FedcalculatorSetParameters - a model defined in Swagger"""  # noqa: E501
        self._c_k2 = None
        self._c_n = None
        self._c_p = None
        self._c_ks = None
        self._c_kcl = None
        self._c_k3 = None
        self._c_ca = None
        self._c_mg = None
        self._c_b = None
        self._c_cu = None
        self._c_k4 = None
        self._c_zn = None
        self._c_mn = None
        self._c_fe = None
        self._c_k5 = None
        self._c_mo = None
        self._c_co = None
        self._c_i = None
        self._c_k6 = None
        self._d_k2 = None
        self._d_n = None
        self._d_p = None
        self._d_ks = None
        self._d_kcl = None
        self._d_k3 = None
        self._d_ca = None
        self._d_mg = None
        self._d_b = None
        self._d_cu = None
        self._d_k4 = None
        self._d_zn = None
        self._d_mn = None
        self._d_fe = None
        self._d_k5 = None
        self._d_mo = None
        self._d_co = None
        self._d_i = None
        self._d_k6 = None
        self.discriminator = None
        if c_k2 is not None:
            self.c_k2 = c_k2
        if c_n is not None:
            self.c_n = c_n
        if c_p is not None:
            self.c_p = c_p
        if c_ks is not None:
            self.c_ks = c_ks
        if c_kcl is not None:
            self.c_kcl = c_kcl
        if c_k3 is not None:
            self.c_k3 = c_k3
        if c_ca is not None:
            self.c_ca = c_ca
        if c_mg is not None:
            self.c_mg = c_mg
        if c_b is not None:
            self.c_b = c_b
        if c_cu is not None:
            self.c_cu = c_cu
        if c_k4 is not None:
            self.c_k4 = c_k4
        if c_zn is not None:
            self.c_zn = c_zn
        if c_mn is not None:
            self.c_mn = c_mn
        if c_fe is not None:
            self.c_fe = c_fe
        if c_k5 is not None:
            self.c_k5 = c_k5
        if c_mo is not None:
            self.c_mo = c_mo
        if c_co is not None:
            self.c_co = c_co
        if c_i is not None:
            self.c_i = c_i
        if c_k6 is not None:
            self.c_k6 = c_k6
        if d_k2 is not None:
            self.d_k2 = d_k2
        if d_n is not None:
            self.d_n = d_n
        if d_p is not None:
            self.d_p = d_p
        if d_ks is not None:
            self.d_ks = d_ks
        if d_kcl is not None:
            self.d_kcl = d_kcl
        if d_k3 is not None:
            self.d_k3 = d_k3
        if d_ca is not None:
            self.d_ca = d_ca
        if d_mg is not None:
            self.d_mg = d_mg
        if d_b is not None:
            self.d_b = d_b
        if d_cu is not None:
            self.d_cu = d_cu
        if d_k4 is not None:
            self.d_k4 = d_k4
        if d_zn is not None:
            self.d_zn = d_zn
        if d_mn is not None:
            self.d_mn = d_mn
        if d_fe is not None:
            self.d_fe = d_fe
        if d_k5 is not None:
            self.d_k5 = d_k5
        if d_mo is not None:
            self.d_mo = d_mo
        if d_co is not None:
            self.d_co = d_co
        if d_i is not None:
            self.d_i = d_i
        if d_k6 is not None:
            self.d_k6 = d_k6

    @property
    def c_k2(self):
        """Gets the c_k2 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_k2 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_k2

    @c_k2.setter
    def c_k2(self, c_k2):
        """Sets the c_k2 of this FedcalculatorSetParameters.


        :param c_k2: The c_k2 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_k2 = c_k2

    @property
    def c_n(self):
        """Gets the c_n of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_n of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_n

    @c_n.setter
    def c_n(self, c_n):
        """Sets the c_n of this FedcalculatorSetParameters.


        :param c_n: The c_n of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_n = c_n

    @property
    def c_p(self):
        """Gets the c_p of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_p of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_p

    @c_p.setter
    def c_p(self, c_p):
        """Sets the c_p of this FedcalculatorSetParameters.


        :param c_p: The c_p of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_p = c_p

    @property
    def c_ks(self):
        """Gets the c_ks of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_ks of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_ks

    @c_ks.setter
    def c_ks(self, c_ks):
        """Sets the c_ks of this FedcalculatorSetParameters.


        :param c_ks: The c_ks of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_ks = c_ks

    @property
    def c_kcl(self):
        """Gets the c_kcl of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_kcl of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_kcl

    @c_kcl.setter
    def c_kcl(self, c_kcl):
        """Sets the c_kcl of this FedcalculatorSetParameters.


        :param c_kcl: The c_kcl of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_kcl = c_kcl

    @property
    def c_k3(self):
        """Gets the c_k3 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_k3 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_k3

    @c_k3.setter
    def c_k3(self, c_k3):
        """Sets the c_k3 of this FedcalculatorSetParameters.


        :param c_k3: The c_k3 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_k3 = c_k3

    @property
    def c_ca(self):
        """Gets the c_ca of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_ca of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_ca

    @c_ca.setter
    def c_ca(self, c_ca):
        """Sets the c_ca of this FedcalculatorSetParameters.


        :param c_ca: The c_ca of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_ca = c_ca

    @property
    def c_mg(self):
        """Gets the c_mg of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_mg of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_mg

    @c_mg.setter
    def c_mg(self, c_mg):
        """Sets the c_mg of this FedcalculatorSetParameters.


        :param c_mg: The c_mg of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_mg = c_mg

    @property
    def c_b(self):
        """Gets the c_b of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_b of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_b

    @c_b.setter
    def c_b(self, c_b):
        """Sets the c_b of this FedcalculatorSetParameters.


        :param c_b: The c_b of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_b = c_b

    @property
    def c_cu(self):
        """Gets the c_cu of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_cu of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_cu

    @c_cu.setter
    def c_cu(self, c_cu):
        """Sets the c_cu of this FedcalculatorSetParameters.


        :param c_cu: The c_cu of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_cu = c_cu

    @property
    def c_k4(self):
        """Gets the c_k4 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_k4 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_k4

    @c_k4.setter
    def c_k4(self, c_k4):
        """Sets the c_k4 of this FedcalculatorSetParameters.


        :param c_k4: The c_k4 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_k4 = c_k4

    @property
    def c_zn(self):
        """Gets the c_zn of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_zn of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_zn

    @c_zn.setter
    def c_zn(self, c_zn):
        """Sets the c_zn of this FedcalculatorSetParameters.


        :param c_zn: The c_zn of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_zn = c_zn

    @property
    def c_mn(self):
        """Gets the c_mn of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_mn of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_mn

    @c_mn.setter
    def c_mn(self, c_mn):
        """Sets the c_mn of this FedcalculatorSetParameters.


        :param c_mn: The c_mn of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_mn = c_mn

    @property
    def c_fe(self):
        """Gets the c_fe of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_fe of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_fe

    @c_fe.setter
    def c_fe(self, c_fe):
        """Sets the c_fe of this FedcalculatorSetParameters.


        :param c_fe: The c_fe of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_fe = c_fe

    @property
    def c_k5(self):
        """Gets the c_k5 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_k5 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_k5

    @c_k5.setter
    def c_k5(self, c_k5):
        """Sets the c_k5 of this FedcalculatorSetParameters.


        :param c_k5: The c_k5 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_k5 = c_k5

    @property
    def c_mo(self):
        """Gets the c_mo of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_mo of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_mo

    @c_mo.setter
    def c_mo(self, c_mo):
        """Sets the c_mo of this FedcalculatorSetParameters.


        :param c_mo: The c_mo of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_mo = c_mo

    @property
    def c_co(self):
        """Gets the c_co of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_co of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_co

    @c_co.setter
    def c_co(self, c_co):
        """Sets the c_co of this FedcalculatorSetParameters.


        :param c_co: The c_co of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_co = c_co

    @property
    def c_i(self):
        """Gets the c_i of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_i of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_i

    @c_i.setter
    def c_i(self, c_i):
        """Sets the c_i of this FedcalculatorSetParameters.


        :param c_i: The c_i of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_i = c_i

    @property
    def c_k6(self):
        """Gets the c_k6 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The c_k6 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._c_k6

    @c_k6.setter
    def c_k6(self, c_k6):
        """Sets the c_k6 of this FedcalculatorSetParameters.


        :param c_k6: The c_k6 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._c_k6 = c_k6

    @property
    def d_k2(self):
        """Gets the d_k2 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_k2 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_k2

    @d_k2.setter
    def d_k2(self, d_k2):
        """Sets the d_k2 of this FedcalculatorSetParameters.


        :param d_k2: The d_k2 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_k2 = d_k2

    @property
    def d_n(self):
        """Gets the d_n of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_n of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_n

    @d_n.setter
    def d_n(self, d_n):
        """Sets the d_n of this FedcalculatorSetParameters.


        :param d_n: The d_n of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_n = d_n

    @property
    def d_p(self):
        """Gets the d_p of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_p of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_p

    @d_p.setter
    def d_p(self, d_p):
        """Sets the d_p of this FedcalculatorSetParameters.


        :param d_p: The d_p of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_p = d_p

    @property
    def d_ks(self):
        """Gets the d_ks of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_ks of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_ks

    @d_ks.setter
    def d_ks(self, d_ks):
        """Sets the d_ks of this FedcalculatorSetParameters.


        :param d_ks: The d_ks of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_ks = d_ks

    @property
    def d_kcl(self):
        """Gets the d_kcl of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_kcl of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_kcl

    @d_kcl.setter
    def d_kcl(self, d_kcl):
        """Sets the d_kcl of this FedcalculatorSetParameters.


        :param d_kcl: The d_kcl of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_kcl = d_kcl

    @property
    def d_k3(self):
        """Gets the d_k3 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_k3 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_k3

    @d_k3.setter
    def d_k3(self, d_k3):
        """Sets the d_k3 of this FedcalculatorSetParameters.


        :param d_k3: The d_k3 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_k3 = d_k3

    @property
    def d_ca(self):
        """Gets the d_ca of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_ca of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_ca

    @d_ca.setter
    def d_ca(self, d_ca):
        """Sets the d_ca of this FedcalculatorSetParameters.


        :param d_ca: The d_ca of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_ca = d_ca

    @property
    def d_mg(self):
        """Gets the d_mg of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_mg of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_mg

    @d_mg.setter
    def d_mg(self, d_mg):
        """Sets the d_mg of this FedcalculatorSetParameters.


        :param d_mg: The d_mg of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_mg = d_mg

    @property
    def d_b(self):
        """Gets the d_b of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_b of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_b

    @d_b.setter
    def d_b(self, d_b):
        """Sets the d_b of this FedcalculatorSetParameters.


        :param d_b: The d_b of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_b = d_b

    @property
    def d_cu(self):
        """Gets the d_cu of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_cu of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_cu

    @d_cu.setter
    def d_cu(self, d_cu):
        """Sets the d_cu of this FedcalculatorSetParameters.


        :param d_cu: The d_cu of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_cu = d_cu

    @property
    def d_k4(self):
        """Gets the d_k4 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_k4 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_k4

    @d_k4.setter
    def d_k4(self, d_k4):
        """Sets the d_k4 of this FedcalculatorSetParameters.


        :param d_k4: The d_k4 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_k4 = d_k4

    @property
    def d_zn(self):
        """Gets the d_zn of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_zn of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_zn

    @d_zn.setter
    def d_zn(self, d_zn):
        """Sets the d_zn of this FedcalculatorSetParameters.


        :param d_zn: The d_zn of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_zn = d_zn

    @property
    def d_mn(self):
        """Gets the d_mn of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_mn of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_mn

    @d_mn.setter
    def d_mn(self, d_mn):
        """Sets the d_mn of this FedcalculatorSetParameters.


        :param d_mn: The d_mn of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_mn = d_mn

    @property
    def d_fe(self):
        """Gets the d_fe of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_fe of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_fe

    @d_fe.setter
    def d_fe(self, d_fe):
        """Sets the d_fe of this FedcalculatorSetParameters.


        :param d_fe: The d_fe of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_fe = d_fe

    @property
    def d_k5(self):
        """Gets the d_k5 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_k5 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_k5

    @d_k5.setter
    def d_k5(self, d_k5):
        """Sets the d_k5 of this FedcalculatorSetParameters.


        :param d_k5: The d_k5 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_k5 = d_k5

    @property
    def d_mo(self):
        """Gets the d_mo of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_mo of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_mo

    @d_mo.setter
    def d_mo(self, d_mo):
        """Sets the d_mo of this FedcalculatorSetParameters.


        :param d_mo: The d_mo of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_mo = d_mo

    @property
    def d_co(self):
        """Gets the d_co of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_co of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_co

    @d_co.setter
    def d_co(self, d_co):
        """Sets the d_co of this FedcalculatorSetParameters.


        :param d_co: The d_co of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_co = d_co

    @property
    def d_i(self):
        """Gets the d_i of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_i of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_i

    @d_i.setter
    def d_i(self, d_i):
        """Sets the d_i of this FedcalculatorSetParameters.


        :param d_i: The d_i of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_i = d_i

    @property
    def d_k6(self):
        """Gets the d_k6 of this FedcalculatorSetParameters.  # noqa: E501


        :return: The d_k6 of this FedcalculatorSetParameters.  # noqa: E501
        :rtype: float
        """
        return self._d_k6

    @d_k6.setter
    def d_k6(self, d_k6):
        """Sets the d_k6 of this FedcalculatorSetParameters.


        :param d_k6: The d_k6 of this FedcalculatorSetParameters.  # noqa: E501
        :type: float
        """

        self._d_k6 = d_k6

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FedcalculatorSetParameters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FedcalculatorSetParameters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
