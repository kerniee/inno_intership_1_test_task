# coding: utf-8

"""
    Api Documentation

    Api Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class SaveFedCalculatorDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'c_b': 'Optionalfloat',
        'c_ca': 'Optionalfloat',
        'c_co': 'Optionalfloat',
        'c_cu': 'Optionalfloat',
        'c_fe': 'Optionalfloat',
        'c_i': 'Optionalfloat',
        'c_k2': 'Optionalfloat',
        'c_k3': 'Optionalfloat',
        'c_k4': 'Optionalfloat',
        'c_k5': 'Optionalfloat',
        'c_k6': 'Optionalfloat',
        'c_ks': 'Optionalfloat',
        'c_ksi': 'Optionalfloat',
        'c_mg': 'Optionalfloat',
        'c_mn': 'Optionalfloat',
        'c_mo': 'Optionalfloat',
        'c_n': 'Optionalfloat',
        'c_p': 'Optionalfloat',
        'c_zn': 'Optionalfloat',
        'd_b': 'Optionalfloat',
        'd_ca': 'Optionalfloat',
        'd_co': 'Optionalfloat',
        'd_cu': 'Optionalfloat',
        'd_fe': 'Optionalfloat',
        'd_i': 'Optionalfloat',
        'd_k2': 'Optionalfloat',
        'd_k3': 'Optionalfloat',
        'd_k4': 'Optionalfloat',
        'd_k5': 'Optionalfloat',
        'd_k6': 'Optionalfloat',
        'd_ks': 'Optionalfloat',
        'd_ksi': 'Optionalfloat',
        'd_mg': 'Optionalfloat',
        'd_mn': 'Optionalfloat',
        'd_mo': 'Optionalfloat',
        'd_n': 'Optionalfloat',
        'd_p': 'Optionalfloat',
        'd_zn': 'Optionalfloat',
        'e_b': 'Optionalfloat',
        'e_ca': 'Optionalfloat',
        'e_co': 'Optionalfloat',
        'e_cu': 'Optionalfloat',
        'e_fe': 'Optionalfloat',
        'e_i': 'Optionalfloat',
        'e_k2': 'Optionalfloat',
        'e_k3': 'Optionalfloat',
        'e_k4': 'Optionalfloat',
        'e_k5': 'Optionalfloat',
        'e_k6': 'Optionalfloat',
        'e_ks': 'Optionalfloat',
        'e_ksi': 'Optionalfloat',
        'e_mg': 'Optionalfloat',
        'e_mn': 'Optionalfloat',
        'e_mo': 'Optionalfloat',
        'e_n': 'Optionalfloat',
        'e_p': 'Optionalfloat',
        'e_zn': 'Optionalfloat',
        'f_b': 'Optionalfloat',
        'f_ca': 'Optionalfloat',
        'f_co': 'Optionalfloat',
        'f_cu': 'Optionalfloat',
        'f_i': 'Optionalfloat',
        'f_k3': 'Optionalfloat',
        'f_k4': 'Optionalfloat',
        'f_k5': 'Optionalfloat',
        'f_k6': 'Optionalfloat',
        'f_mg': 'Optionalfloat',
        'f_mo': 'Optionalfloat',
        'g_fe': 'Optionalfloat',
        'g_k2': 'Optionalfloat',
        'g_k3': 'Optionalfloat',
        'g_k4': 'Optionalfloat',
        'g_k5': 'Optionalfloat',
        'g_ks': 'Optionalfloat',
        'g_ksi': 'Optionalfloat',
        'g_mn': 'Optionalfloat',
        'g_n': 'Optionalfloat',
        'g_p': 'Optionalfloat',
        'g_zn': 'Optionalfloat',
        'h_b': 'Optionalfloat',
        'h_ca': 'Optionalfloat',
        'h_co': 'Optionalfloat',
        'h_cu': 'Optionalfloat',
        'h_fe': 'Optionalfloat',
        'h_i': 'Optionalfloat',
        'h_ks': 'Optionalfloat',
        'h_ksi': 'Optionalfloat',
        'h_mg': 'Optionalfloat',
        'h_mn': 'Optionalfloat',
        'h_mo': 'Optionalfloat',
        'h_n': 'Optionalfloat',
        'h_p': 'Optionalfloat',
        'h_zn': 'Optionalfloat',
        'mean': 'Optionalfloat'
    }

    attribute_map = {
        'c_b': 'cB',
        'c_ca': 'cCa',
        'c_co': 'cCo',
        'c_cu': 'cCu',
        'c_fe': 'cFe',
        'c_i': 'cI',
        'c_k2': 'cK2',
        'c_k3': 'cK3',
        'c_k4': 'cK4',
        'c_k5': 'cK5',
        'c_k6': 'cK6',
        'c_ks': 'cKs',
        'c_ksi': 'cKsi',
        'c_mg': 'cMg',
        'c_mn': 'cMn',
        'c_mo': 'cMo',
        'c_n': 'cN',
        'c_p': 'cP',
        'c_zn': 'cZn',
        'd_b': 'dB',
        'd_ca': 'dCa',
        'd_co': 'dCo',
        'd_cu': 'dCu',
        'd_fe': 'dFe',
        'd_i': 'dI',
        'd_k2': 'dK2',
        'd_k3': 'dK3',
        'd_k4': 'dK4',
        'd_k5': 'dK5',
        'd_k6': 'dK6',
        'd_ks': 'dKs',
        'd_ksi': 'dKsi',
        'd_mg': 'dMg',
        'd_mn': 'dMn',
        'd_mo': 'dMo',
        'd_n': 'dN',
        'd_p': 'dP',
        'd_zn': 'dZn',
        'e_b': 'eB',
        'e_ca': 'eCa',
        'e_co': 'eCo',
        'e_cu': 'eCu',
        'e_fe': 'eFe',
        'e_i': 'eI',
        'e_k2': 'eK2',
        'e_k3': 'eK3',
        'e_k4': 'eK4',
        'e_k5': 'eK5',
        'e_k6': 'eK6',
        'e_ks': 'eKs',
        'e_ksi': 'eKsi',
        'e_mg': 'eMg',
        'e_mn': 'eMn',
        'e_mo': 'eMo',
        'e_n': 'eN',
        'e_p': 'eP',
        'e_zn': 'eZn',
        'f_b': 'fB',
        'f_ca': 'fCa',
        'f_co': 'fCo',
        'f_cu': 'fCu',
        'f_i': 'fI',
        'f_k3': 'fK3',
        'f_k4': 'fK4',
        'f_k5': 'fK5',
        'f_k6': 'fK6',
        'f_mg': 'fMg',
        'f_mo': 'fMo',
        'g_fe': 'gFe',
        'g_k2': 'gK2',
        'g_k3': 'gK3',
        'g_k4': 'gK4',
        'g_k5': 'gK5',
        'g_ks': 'gKs',
        'g_ksi': 'gKsi',
        'g_mn': 'gMn',
        'g_n': 'gN',
        'g_p': 'gP',
        'g_zn': 'gZn',
        'h_b': 'hB',
        'h_ca': 'hCa',
        'h_co': 'hCo',
        'h_cu': 'hCu',
        'h_fe': 'hFe',
        'h_i': 'hI',
        'h_ks': 'hKs',
        'h_ksi': 'hKsi',
        'h_mg': 'hMg',
        'h_mn': 'hMn',
        'h_mo': 'hMo',
        'h_n': 'hN',
        'h_p': 'hP',
        'h_zn': 'hZn',
        'mean': 'mean'
    }

    def __init__(self, c_b=None, c_ca=None, c_co=None, c_cu=None, c_fe=None, c_i=None, c_k2=None, c_k3=None, c_k4=None, c_k5=None, c_k6=None, c_ks=None, c_ksi=None, c_mg=None, c_mn=None, c_mo=None, c_n=None, c_p=None, c_zn=None, d_b=None, d_ca=None, d_co=None, d_cu=None, d_fe=None, d_i=None, d_k2=None, d_k3=None, d_k4=None, d_k5=None, d_k6=None, d_ks=None, d_ksi=None, d_mg=None, d_mn=None, d_mo=None, d_n=None, d_p=None, d_zn=None, e_b=None, e_ca=None, e_co=None, e_cu=None, e_fe=None, e_i=None, e_k2=None, e_k3=None, e_k4=None, e_k5=None, e_k6=None, e_ks=None, e_ksi=None, e_mg=None, e_mn=None, e_mo=None, e_n=None, e_p=None, e_zn=None, f_b=None, f_ca=None, f_co=None, f_cu=None, f_i=None, f_k3=None, f_k4=None, f_k5=None, f_k6=None, f_mg=None, f_mo=None, g_fe=None, g_k2=None, g_k3=None, g_k4=None, g_k5=None, g_ks=None, g_ksi=None, g_mn=None, g_n=None, g_p=None, g_zn=None, h_b=None, h_ca=None, h_co=None, h_cu=None, h_fe=None, h_i=None, h_ks=None, h_ksi=None, h_mg=None, h_mn=None, h_mo=None, h_n=None, h_p=None, h_zn=None, mean=None, _configuration=None):  # noqa: E501
        """SaveFedCalculatorDto - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._c_b = None
        self._c_ca = None
        self._c_co = None
        self._c_cu = None
        self._c_fe = None
        self._c_i = None
        self._c_k2 = None
        self._c_k3 = None
        self._c_k4 = None
        self._c_k5 = None
        self._c_k6 = None
        self._c_ks = None
        self._c_ksi = None
        self._c_mg = None
        self._c_mn = None
        self._c_mo = None
        self._c_n = None
        self._c_p = None
        self._c_zn = None
        self._d_b = None
        self._d_ca = None
        self._d_co = None
        self._d_cu = None
        self._d_fe = None
        self._d_i = None
        self._d_k2 = None
        self._d_k3 = None
        self._d_k4 = None
        self._d_k5 = None
        self._d_k6 = None
        self._d_ks = None
        self._d_ksi = None
        self._d_mg = None
        self._d_mn = None
        self._d_mo = None
        self._d_n = None
        self._d_p = None
        self._d_zn = None
        self._e_b = None
        self._e_ca = None
        self._e_co = None
        self._e_cu = None
        self._e_fe = None
        self._e_i = None
        self._e_k2 = None
        self._e_k3 = None
        self._e_k4 = None
        self._e_k5 = None
        self._e_k6 = None
        self._e_ks = None
        self._e_ksi = None
        self._e_mg = None
        self._e_mn = None
        self._e_mo = None
        self._e_n = None
        self._e_p = None
        self._e_zn = None
        self._f_b = None
        self._f_ca = None
        self._f_co = None
        self._f_cu = None
        self._f_i = None
        self._f_k3 = None
        self._f_k4 = None
        self._f_k5 = None
        self._f_k6 = None
        self._f_mg = None
        self._f_mo = None
        self._g_fe = None
        self._g_k2 = None
        self._g_k3 = None
        self._g_k4 = None
        self._g_k5 = None
        self._g_ks = None
        self._g_ksi = None
        self._g_mn = None
        self._g_n = None
        self._g_p = None
        self._g_zn = None
        self._h_b = None
        self._h_ca = None
        self._h_co = None
        self._h_cu = None
        self._h_fe = None
        self._h_i = None
        self._h_ks = None
        self._h_ksi = None
        self._h_mg = None
        self._h_mn = None
        self._h_mo = None
        self._h_n = None
        self._h_p = None
        self._h_zn = None
        self._mean = None
        self.discriminator = None

        if c_b is not None:
            self.c_b = c_b
        if c_ca is not None:
            self.c_ca = c_ca
        if c_co is not None:
            self.c_co = c_co
        if c_cu is not None:
            self.c_cu = c_cu
        if c_fe is not None:
            self.c_fe = c_fe
        if c_i is not None:
            self.c_i = c_i
        if c_k2 is not None:
            self.c_k2 = c_k2
        if c_k3 is not None:
            self.c_k3 = c_k3
        if c_k4 is not None:
            self.c_k4 = c_k4
        if c_k5 is not None:
            self.c_k5 = c_k5
        if c_k6 is not None:
            self.c_k6 = c_k6
        if c_ks is not None:
            self.c_ks = c_ks
        if c_ksi is not None:
            self.c_ksi = c_ksi
        if c_mg is not None:
            self.c_mg = c_mg
        if c_mn is not None:
            self.c_mn = c_mn
        if c_mo is not None:
            self.c_mo = c_mo
        if c_n is not None:
            self.c_n = c_n
        if c_p is not None:
            self.c_p = c_p
        if c_zn is not None:
            self.c_zn = c_zn
        if d_b is not None:
            self.d_b = d_b
        if d_ca is not None:
            self.d_ca = d_ca
        if d_co is not None:
            self.d_co = d_co
        if d_cu is not None:
            self.d_cu = d_cu
        if d_fe is not None:
            self.d_fe = d_fe
        if d_i is not None:
            self.d_i = d_i
        if d_k2 is not None:
            self.d_k2 = d_k2
        if d_k3 is not None:
            self.d_k3 = d_k3
        if d_k4 is not None:
            self.d_k4 = d_k4
        if d_k5 is not None:
            self.d_k5 = d_k5
        if d_k6 is not None:
            self.d_k6 = d_k6
        if d_ks is not None:
            self.d_ks = d_ks
        if d_ksi is not None:
            self.d_ksi = d_ksi
        if d_mg is not None:
            self.d_mg = d_mg
        if d_mn is not None:
            self.d_mn = d_mn
        if d_mo is not None:
            self.d_mo = d_mo
        if d_n is not None:
            self.d_n = d_n
        if d_p is not None:
            self.d_p = d_p
        if d_zn is not None:
            self.d_zn = d_zn
        if e_b is not None:
            self.e_b = e_b
        if e_ca is not None:
            self.e_ca = e_ca
        if e_co is not None:
            self.e_co = e_co
        if e_cu is not None:
            self.e_cu = e_cu
        if e_fe is not None:
            self.e_fe = e_fe
        if e_i is not None:
            self.e_i = e_i
        if e_k2 is not None:
            self.e_k2 = e_k2
        if e_k3 is not None:
            self.e_k3 = e_k3
        if e_k4 is not None:
            self.e_k4 = e_k4
        if e_k5 is not None:
            self.e_k5 = e_k5
        if e_k6 is not None:
            self.e_k6 = e_k6
        if e_ks is not None:
            self.e_ks = e_ks
        if e_ksi is not None:
            self.e_ksi = e_ksi
        if e_mg is not None:
            self.e_mg = e_mg
        if e_mn is not None:
            self.e_mn = e_mn
        if e_mo is not None:
            self.e_mo = e_mo
        if e_n is not None:
            self.e_n = e_n
        if e_p is not None:
            self.e_p = e_p
        if e_zn is not None:
            self.e_zn = e_zn
        if f_b is not None:
            self.f_b = f_b
        if f_ca is not None:
            self.f_ca = f_ca
        if f_co is not None:
            self.f_co = f_co
        if f_cu is not None:
            self.f_cu = f_cu
        if f_i is not None:
            self.f_i = f_i
        if f_k3 is not None:
            self.f_k3 = f_k3
        if f_k4 is not None:
            self.f_k4 = f_k4
        if f_k5 is not None:
            self.f_k5 = f_k5
        if f_k6 is not None:
            self.f_k6 = f_k6
        if f_mg is not None:
            self.f_mg = f_mg
        if f_mo is not None:
            self.f_mo = f_mo
        if g_fe is not None:
            self.g_fe = g_fe
        if g_k2 is not None:
            self.g_k2 = g_k2
        if g_k3 is not None:
            self.g_k3 = g_k3
        if g_k4 is not None:
            self.g_k4 = g_k4
        if g_k5 is not None:
            self.g_k5 = g_k5
        if g_ks is not None:
            self.g_ks = g_ks
        if g_ksi is not None:
            self.g_ksi = g_ksi
        if g_mn is not None:
            self.g_mn = g_mn
        if g_n is not None:
            self.g_n = g_n
        if g_p is not None:
            self.g_p = g_p
        if g_zn is not None:
            self.g_zn = g_zn
        if h_b is not None:
            self.h_b = h_b
        if h_ca is not None:
            self.h_ca = h_ca
        if h_co is not None:
            self.h_co = h_co
        if h_cu is not None:
            self.h_cu = h_cu
        if h_fe is not None:
            self.h_fe = h_fe
        if h_i is not None:
            self.h_i = h_i
        if h_ks is not None:
            self.h_ks = h_ks
        if h_ksi is not None:
            self.h_ksi = h_ksi
        if h_mg is not None:
            self.h_mg = h_mg
        if h_mn is not None:
            self.h_mn = h_mn
        if h_mo is not None:
            self.h_mo = h_mo
        if h_n is not None:
            self.h_n = h_n
        if h_p is not None:
            self.h_p = h_p
        if h_zn is not None:
            self.h_zn = h_zn
        if mean is not None:
            self.mean = mean

    @property
    def c_b(self):
        """Gets the c_b of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_b of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_b

    @c_b.setter
    def c_b(self, c_b):
        """Sets the c_b of this SaveFedCalculatorDto.


        :param c_b: The c_b of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_b = c_b

    @property
    def c_ca(self):
        """Gets the c_ca of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_ca of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_ca

    @c_ca.setter
    def c_ca(self, c_ca):
        """Sets the c_ca of this SaveFedCalculatorDto.


        :param c_ca: The c_ca of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_ca = c_ca

    @property
    def c_co(self):
        """Gets the c_co of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_co of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_co

    @c_co.setter
    def c_co(self, c_co):
        """Sets the c_co of this SaveFedCalculatorDto.


        :param c_co: The c_co of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_co = c_co

    @property
    def c_cu(self):
        """Gets the c_cu of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_cu of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_cu

    @c_cu.setter
    def c_cu(self, c_cu):
        """Sets the c_cu of this SaveFedCalculatorDto.


        :param c_cu: The c_cu of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_cu = c_cu

    @property
    def c_fe(self):
        """Gets the c_fe of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_fe of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_fe

    @c_fe.setter
    def c_fe(self, c_fe):
        """Sets the c_fe of this SaveFedCalculatorDto.


        :param c_fe: The c_fe of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_fe = c_fe

    @property
    def c_i(self):
        """Gets the c_i of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_i of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_i

    @c_i.setter
    def c_i(self, c_i):
        """Sets the c_i of this SaveFedCalculatorDto.


        :param c_i: The c_i of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_i = c_i

    @property
    def c_k2(self):
        """Gets the c_k2 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_k2 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_k2

    @c_k2.setter
    def c_k2(self, c_k2):
        """Sets the c_k2 of this SaveFedCalculatorDto.


        :param c_k2: The c_k2 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_k2 = c_k2

    @property
    def c_k3(self):
        """Gets the c_k3 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_k3

    @c_k3.setter
    def c_k3(self, c_k3):
        """Sets the c_k3 of this SaveFedCalculatorDto.


        :param c_k3: The c_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_k3 = c_k3

    @property
    def c_k4(self):
        """Gets the c_k4 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_k4

    @c_k4.setter
    def c_k4(self, c_k4):
        """Sets the c_k4 of this SaveFedCalculatorDto.


        :param c_k4: The c_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_k4 = c_k4

    @property
    def c_k5(self):
        """Gets the c_k5 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_k5

    @c_k5.setter
    def c_k5(self, c_k5):
        """Sets the c_k5 of this SaveFedCalculatorDto.


        :param c_k5: The c_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_k5 = c_k5

    @property
    def c_k6(self):
        """Gets the c_k6 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_k6 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_k6

    @c_k6.setter
    def c_k6(self, c_k6):
        """Sets the c_k6 of this SaveFedCalculatorDto.


        :param c_k6: The c_k6 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_k6 = c_k6

    @property
    def c_ks(self):
        """Gets the c_ks of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_ks of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_ks

    @c_ks.setter
    def c_ks(self, c_ks):
        """Sets the c_ks of this SaveFedCalculatorDto.


        :param c_ks: The c_ks of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_ks = c_ks

    @property
    def c_ksi(self):
        """Gets the c_ksi of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_ksi

    @c_ksi.setter
    def c_ksi(self, c_ksi):
        """Sets the c_ksi of this SaveFedCalculatorDto.


        :param c_ksi: The c_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_ksi = c_ksi

    @property
    def c_mg(self):
        """Gets the c_mg of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_mg of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_mg

    @c_mg.setter
    def c_mg(self, c_mg):
        """Sets the c_mg of this SaveFedCalculatorDto.


        :param c_mg: The c_mg of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_mg = c_mg

    @property
    def c_mn(self):
        """Gets the c_mn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_mn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_mn

    @c_mn.setter
    def c_mn(self, c_mn):
        """Sets the c_mn of this SaveFedCalculatorDto.


        :param c_mn: The c_mn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_mn = c_mn

    @property
    def c_mo(self):
        """Gets the c_mo of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_mo of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_mo

    @c_mo.setter
    def c_mo(self, c_mo):
        """Sets the c_mo of this SaveFedCalculatorDto.


        :param c_mo: The c_mo of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_mo = c_mo

    @property
    def c_n(self):
        """Gets the c_n of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_n of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_n

    @c_n.setter
    def c_n(self, c_n):
        """Sets the c_n of this SaveFedCalculatorDto.


        :param c_n: The c_n of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_n = c_n

    @property
    def c_p(self):
        """Gets the c_p of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_p of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_p

    @c_p.setter
    def c_p(self, c_p):
        """Sets the c_p of this SaveFedCalculatorDto.


        :param c_p: The c_p of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_p = c_p

    @property
    def c_zn(self):
        """Gets the c_zn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The c_zn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._c_zn

    @c_zn.setter
    def c_zn(self, c_zn):
        """Sets the c_zn of this SaveFedCalculatorDto.


        :param c_zn: The c_zn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._c_zn = c_zn

    @property
    def d_b(self):
        """Gets the d_b of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_b of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_b

    @d_b.setter
    def d_b(self, d_b):
        """Sets the d_b of this SaveFedCalculatorDto.


        :param d_b: The d_b of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_b = d_b

    @property
    def d_ca(self):
        """Gets the d_ca of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_ca of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_ca

    @d_ca.setter
    def d_ca(self, d_ca):
        """Sets the d_ca of this SaveFedCalculatorDto.


        :param d_ca: The d_ca of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_ca = d_ca

    @property
    def d_co(self):
        """Gets the d_co of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_co of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_co

    @d_co.setter
    def d_co(self, d_co):
        """Sets the d_co of this SaveFedCalculatorDto.


        :param d_co: The d_co of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_co = d_co

    @property
    def d_cu(self):
        """Gets the d_cu of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_cu of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_cu

    @d_cu.setter
    def d_cu(self, d_cu):
        """Sets the d_cu of this SaveFedCalculatorDto.


        :param d_cu: The d_cu of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_cu = d_cu

    @property
    def d_fe(self):
        """Gets the d_fe of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_fe of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_fe

    @d_fe.setter
    def d_fe(self, d_fe):
        """Sets the d_fe of this SaveFedCalculatorDto.


        :param d_fe: The d_fe of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_fe = d_fe

    @property
    def d_i(self):
        """Gets the d_i of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_i of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_i

    @d_i.setter
    def d_i(self, d_i):
        """Sets the d_i of this SaveFedCalculatorDto.


        :param d_i: The d_i of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_i = d_i

    @property
    def d_k2(self):
        """Gets the d_k2 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_k2 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_k2

    @d_k2.setter
    def d_k2(self, d_k2):
        """Sets the d_k2 of this SaveFedCalculatorDto.


        :param d_k2: The d_k2 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_k2 = d_k2

    @property
    def d_k3(self):
        """Gets the d_k3 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_k3

    @d_k3.setter
    def d_k3(self, d_k3):
        """Sets the d_k3 of this SaveFedCalculatorDto.


        :param d_k3: The d_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_k3 = d_k3

    @property
    def d_k4(self):
        """Gets the d_k4 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_k4

    @d_k4.setter
    def d_k4(self, d_k4):
        """Sets the d_k4 of this SaveFedCalculatorDto.


        :param d_k4: The d_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_k4 = d_k4

    @property
    def d_k5(self):
        """Gets the d_k5 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_k5

    @d_k5.setter
    def d_k5(self, d_k5):
        """Sets the d_k5 of this SaveFedCalculatorDto.


        :param d_k5: The d_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_k5 = d_k5

    @property
    def d_k6(self):
        """Gets the d_k6 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_k6 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_k6

    @d_k6.setter
    def d_k6(self, d_k6):
        """Sets the d_k6 of this SaveFedCalculatorDto.


        :param d_k6: The d_k6 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_k6 = d_k6

    @property
    def d_ks(self):
        """Gets the d_ks of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_ks of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_ks

    @d_ks.setter
    def d_ks(self, d_ks):
        """Sets the d_ks of this SaveFedCalculatorDto.


        :param d_ks: The d_ks of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_ks = d_ks

    @property
    def d_ksi(self):
        """Gets the d_ksi of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_ksi

    @d_ksi.setter
    def d_ksi(self, d_ksi):
        """Sets the d_ksi of this SaveFedCalculatorDto.


        :param d_ksi: The d_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_ksi = d_ksi

    @property
    def d_mg(self):
        """Gets the d_mg of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_mg of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_mg

    @d_mg.setter
    def d_mg(self, d_mg):
        """Sets the d_mg of this SaveFedCalculatorDto.


        :param d_mg: The d_mg of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_mg = d_mg

    @property
    def d_mn(self):
        """Gets the d_mn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_mn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_mn

    @d_mn.setter
    def d_mn(self, d_mn):
        """Sets the d_mn of this SaveFedCalculatorDto.


        :param d_mn: The d_mn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_mn = d_mn

    @property
    def d_mo(self):
        """Gets the d_mo of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_mo of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_mo

    @d_mo.setter
    def d_mo(self, d_mo):
        """Sets the d_mo of this SaveFedCalculatorDto.


        :param d_mo: The d_mo of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_mo = d_mo

    @property
    def d_n(self):
        """Gets the d_n of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_n of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_n

    @d_n.setter
    def d_n(self, d_n):
        """Sets the d_n of this SaveFedCalculatorDto.


        :param d_n: The d_n of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_n = d_n

    @property
    def d_p(self):
        """Gets the d_p of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_p of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_p

    @d_p.setter
    def d_p(self, d_p):
        """Sets the d_p of this SaveFedCalculatorDto.


        :param d_p: The d_p of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_p = d_p

    @property
    def d_zn(self):
        """Gets the d_zn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The d_zn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._d_zn

    @d_zn.setter
    def d_zn(self, d_zn):
        """Sets the d_zn of this SaveFedCalculatorDto.


        :param d_zn: The d_zn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._d_zn = d_zn

    @property
    def e_b(self):
        """Gets the e_b of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_b of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_b

    @e_b.setter
    def e_b(self, e_b):
        """Sets the e_b of this SaveFedCalculatorDto.


        :param e_b: The e_b of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_b = e_b

    @property
    def e_ca(self):
        """Gets the e_ca of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_ca of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_ca

    @e_ca.setter
    def e_ca(self, e_ca):
        """Sets the e_ca of this SaveFedCalculatorDto.


        :param e_ca: The e_ca of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_ca = e_ca

    @property
    def e_co(self):
        """Gets the e_co of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_co of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_co

    @e_co.setter
    def e_co(self, e_co):
        """Sets the e_co of this SaveFedCalculatorDto.


        :param e_co: The e_co of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_co = e_co

    @property
    def e_cu(self):
        """Gets the e_cu of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_cu of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_cu

    @e_cu.setter
    def e_cu(self, e_cu):
        """Sets the e_cu of this SaveFedCalculatorDto.


        :param e_cu: The e_cu of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_cu = e_cu

    @property
    def e_fe(self):
        """Gets the e_fe of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_fe of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_fe

    @e_fe.setter
    def e_fe(self, e_fe):
        """Sets the e_fe of this SaveFedCalculatorDto.


        :param e_fe: The e_fe of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_fe = e_fe

    @property
    def e_i(self):
        """Gets the e_i of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_i of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_i

    @e_i.setter
    def e_i(self, e_i):
        """Sets the e_i of this SaveFedCalculatorDto.


        :param e_i: The e_i of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_i = e_i

    @property
    def e_k2(self):
        """Gets the e_k2 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_k2 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_k2

    @e_k2.setter
    def e_k2(self, e_k2):
        """Sets the e_k2 of this SaveFedCalculatorDto.


        :param e_k2: The e_k2 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_k2 = e_k2

    @property
    def e_k3(self):
        """Gets the e_k3 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_k3

    @e_k3.setter
    def e_k3(self, e_k3):
        """Sets the e_k3 of this SaveFedCalculatorDto.


        :param e_k3: The e_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_k3 = e_k3

    @property
    def e_k4(self):
        """Gets the e_k4 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_k4

    @e_k4.setter
    def e_k4(self, e_k4):
        """Sets the e_k4 of this SaveFedCalculatorDto.


        :param e_k4: The e_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_k4 = e_k4

    @property
    def e_k5(self):
        """Gets the e_k5 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_k5

    @e_k5.setter
    def e_k5(self, e_k5):
        """Sets the e_k5 of this SaveFedCalculatorDto.


        :param e_k5: The e_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_k5 = e_k5

    @property
    def e_k6(self):
        """Gets the e_k6 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_k6 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_k6

    @e_k6.setter
    def e_k6(self, e_k6):
        """Sets the e_k6 of this SaveFedCalculatorDto.


        :param e_k6: The e_k6 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_k6 = e_k6

    @property
    def e_ks(self):
        """Gets the e_ks of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_ks of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_ks

    @e_ks.setter
    def e_ks(self, e_ks):
        """Sets the e_ks of this SaveFedCalculatorDto.


        :param e_ks: The e_ks of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_ks = e_ks

    @property
    def e_ksi(self):
        """Gets the e_ksi of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_ksi

    @e_ksi.setter
    def e_ksi(self, e_ksi):
        """Sets the e_ksi of this SaveFedCalculatorDto.


        :param e_ksi: The e_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_ksi = e_ksi

    @property
    def e_mg(self):
        """Gets the e_mg of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_mg of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_mg

    @e_mg.setter
    def e_mg(self, e_mg):
        """Sets the e_mg of this SaveFedCalculatorDto.


        :param e_mg: The e_mg of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_mg = e_mg

    @property
    def e_mn(self):
        """Gets the e_mn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_mn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_mn

    @e_mn.setter
    def e_mn(self, e_mn):
        """Sets the e_mn of this SaveFedCalculatorDto.


        :param e_mn: The e_mn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_mn = e_mn

    @property
    def e_mo(self):
        """Gets the e_mo of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_mo of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_mo

    @e_mo.setter
    def e_mo(self, e_mo):
        """Sets the e_mo of this SaveFedCalculatorDto.


        :param e_mo: The e_mo of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_mo = e_mo

    @property
    def e_n(self):
        """Gets the e_n of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_n of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_n

    @e_n.setter
    def e_n(self, e_n):
        """Sets the e_n of this SaveFedCalculatorDto.


        :param e_n: The e_n of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_n = e_n

    @property
    def e_p(self):
        """Gets the e_p of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_p of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_p

    @e_p.setter
    def e_p(self, e_p):
        """Sets the e_p of this SaveFedCalculatorDto.


        :param e_p: The e_p of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_p = e_p

    @property
    def e_zn(self):
        """Gets the e_zn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The e_zn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._e_zn

    @e_zn.setter
    def e_zn(self, e_zn):
        """Sets the e_zn of this SaveFedCalculatorDto.


        :param e_zn: The e_zn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._e_zn = e_zn

    @property
    def f_b(self):
        """Gets the f_b of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_b of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_b

    @f_b.setter
    def f_b(self, f_b):
        """Sets the f_b of this SaveFedCalculatorDto.


        :param f_b: The f_b of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_b = f_b

    @property
    def f_ca(self):
        """Gets the f_ca of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_ca of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_ca

    @f_ca.setter
    def f_ca(self, f_ca):
        """Sets the f_ca of this SaveFedCalculatorDto.


        :param f_ca: The f_ca of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_ca = f_ca

    @property
    def f_co(self):
        """Gets the f_co of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_co of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_co

    @f_co.setter
    def f_co(self, f_co):
        """Sets the f_co of this SaveFedCalculatorDto.


        :param f_co: The f_co of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_co = f_co

    @property
    def f_cu(self):
        """Gets the f_cu of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_cu of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_cu

    @f_cu.setter
    def f_cu(self, f_cu):
        """Sets the f_cu of this SaveFedCalculatorDto.


        :param f_cu: The f_cu of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_cu = f_cu

    @property
    def f_i(self):
        """Gets the f_i of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_i of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_i

    @f_i.setter
    def f_i(self, f_i):
        """Sets the f_i of this SaveFedCalculatorDto.


        :param f_i: The f_i of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_i = f_i

    @property
    def f_k3(self):
        """Gets the f_k3 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_k3

    @f_k3.setter
    def f_k3(self, f_k3):
        """Sets the f_k3 of this SaveFedCalculatorDto.


        :param f_k3: The f_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_k3 = f_k3

    @property
    def f_k4(self):
        """Gets the f_k4 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_k4

    @f_k4.setter
    def f_k4(self, f_k4):
        """Sets the f_k4 of this SaveFedCalculatorDto.


        :param f_k4: The f_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_k4 = f_k4

    @property
    def f_k5(self):
        """Gets the f_k5 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_k5

    @f_k5.setter
    def f_k5(self, f_k5):
        """Sets the f_k5 of this SaveFedCalculatorDto.


        :param f_k5: The f_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_k5 = f_k5

    @property
    def f_k6(self):
        """Gets the f_k6 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_k6 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_k6

    @f_k6.setter
    def f_k6(self, f_k6):
        """Sets the f_k6 of this SaveFedCalculatorDto.


        :param f_k6: The f_k6 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_k6 = f_k6

    @property
    def f_mg(self):
        """Gets the f_mg of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_mg of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_mg

    @f_mg.setter
    def f_mg(self, f_mg):
        """Sets the f_mg of this SaveFedCalculatorDto.


        :param f_mg: The f_mg of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_mg = f_mg

    @property
    def f_mo(self):
        """Gets the f_mo of this SaveFedCalculatorDto.  # noqa: E501


        :return: The f_mo of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._f_mo

    @f_mo.setter
    def f_mo(self, f_mo):
        """Sets the f_mo of this SaveFedCalculatorDto.


        :param f_mo: The f_mo of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._f_mo = f_mo

    @property
    def g_fe(self):
        """Gets the g_fe of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_fe of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_fe

    @g_fe.setter
    def g_fe(self, g_fe):
        """Sets the g_fe of this SaveFedCalculatorDto.


        :param g_fe: The g_fe of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_fe = g_fe

    @property
    def g_k2(self):
        """Gets the g_k2 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_k2 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_k2

    @g_k2.setter
    def g_k2(self, g_k2):
        """Sets the g_k2 of this SaveFedCalculatorDto.


        :param g_k2: The g_k2 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_k2 = g_k2

    @property
    def g_k3(self):
        """Gets the g_k3 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_k3

    @g_k3.setter
    def g_k3(self, g_k3):
        """Sets the g_k3 of this SaveFedCalculatorDto.


        :param g_k3: The g_k3 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_k3 = g_k3

    @property
    def g_k4(self):
        """Gets the g_k4 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_k4

    @g_k4.setter
    def g_k4(self, g_k4):
        """Sets the g_k4 of this SaveFedCalculatorDto.


        :param g_k4: The g_k4 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_k4 = g_k4

    @property
    def g_k5(self):
        """Gets the g_k5 of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_k5

    @g_k5.setter
    def g_k5(self, g_k5):
        """Sets the g_k5 of this SaveFedCalculatorDto.


        :param g_k5: The g_k5 of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_k5 = g_k5

    @property
    def g_ks(self):
        """Gets the g_ks of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_ks of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_ks

    @g_ks.setter
    def g_ks(self, g_ks):
        """Sets the g_ks of this SaveFedCalculatorDto.


        :param g_ks: The g_ks of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_ks = g_ks

    @property
    def g_ksi(self):
        """Gets the g_ksi of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_ksi

    @g_ksi.setter
    def g_ksi(self, g_ksi):
        """Sets the g_ksi of this SaveFedCalculatorDto.


        :param g_ksi: The g_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_ksi = g_ksi

    @property
    def g_mn(self):
        """Gets the g_mn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_mn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_mn

    @g_mn.setter
    def g_mn(self, g_mn):
        """Sets the g_mn of this SaveFedCalculatorDto.


        :param g_mn: The g_mn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_mn = g_mn

    @property
    def g_n(self):
        """Gets the g_n of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_n of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_n

    @g_n.setter
    def g_n(self, g_n):
        """Sets the g_n of this SaveFedCalculatorDto.


        :param g_n: The g_n of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_n = g_n

    @property
    def g_p(self):
        """Gets the g_p of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_p of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_p

    @g_p.setter
    def g_p(self, g_p):
        """Sets the g_p of this SaveFedCalculatorDto.


        :param g_p: The g_p of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_p = g_p

    @property
    def g_zn(self):
        """Gets the g_zn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The g_zn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._g_zn

    @g_zn.setter
    def g_zn(self, g_zn):
        """Sets the g_zn of this SaveFedCalculatorDto.


        :param g_zn: The g_zn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._g_zn = g_zn

    @property
    def h_b(self):
        """Gets the h_b of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_b of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_b

    @h_b.setter
    def h_b(self, h_b):
        """Sets the h_b of this SaveFedCalculatorDto.


        :param h_b: The h_b of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_b = h_b

    @property
    def h_ca(self):
        """Gets the h_ca of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_ca of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_ca

    @h_ca.setter
    def h_ca(self, h_ca):
        """Sets the h_ca of this SaveFedCalculatorDto.


        :param h_ca: The h_ca of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_ca = h_ca

    @property
    def h_co(self):
        """Gets the h_co of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_co of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_co

    @h_co.setter
    def h_co(self, h_co):
        """Sets the h_co of this SaveFedCalculatorDto.


        :param h_co: The h_co of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_co = h_co

    @property
    def h_cu(self):
        """Gets the h_cu of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_cu of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_cu

    @h_cu.setter
    def h_cu(self, h_cu):
        """Sets the h_cu of this SaveFedCalculatorDto.


        :param h_cu: The h_cu of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_cu = h_cu

    @property
    def h_fe(self):
        """Gets the h_fe of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_fe of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_fe

    @h_fe.setter
    def h_fe(self, h_fe):
        """Sets the h_fe of this SaveFedCalculatorDto.


        :param h_fe: The h_fe of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_fe = h_fe

    @property
    def h_i(self):
        """Gets the h_i of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_i of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_i

    @h_i.setter
    def h_i(self, h_i):
        """Sets the h_i of this SaveFedCalculatorDto.


        :param h_i: The h_i of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_i = h_i

    @property
    def h_ks(self):
        """Gets the h_ks of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_ks of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_ks

    @h_ks.setter
    def h_ks(self, h_ks):
        """Sets the h_ks of this SaveFedCalculatorDto.


        :param h_ks: The h_ks of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_ks = h_ks

    @property
    def h_ksi(self):
        """Gets the h_ksi of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_ksi

    @h_ksi.setter
    def h_ksi(self, h_ksi):
        """Sets the h_ksi of this SaveFedCalculatorDto.


        :param h_ksi: The h_ksi of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_ksi = h_ksi

    @property
    def h_mg(self):
        """Gets the h_mg of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_mg of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_mg

    @h_mg.setter
    def h_mg(self, h_mg):
        """Sets the h_mg of this SaveFedCalculatorDto.


        :param h_mg: The h_mg of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_mg = h_mg

    @property
    def h_mn(self):
        """Gets the h_mn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_mn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_mn

    @h_mn.setter
    def h_mn(self, h_mn):
        """Sets the h_mn of this SaveFedCalculatorDto.


        :param h_mn: The h_mn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_mn = h_mn

    @property
    def h_mo(self):
        """Gets the h_mo of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_mo of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_mo

    @h_mo.setter
    def h_mo(self, h_mo):
        """Sets the h_mo of this SaveFedCalculatorDto.


        :param h_mo: The h_mo of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_mo = h_mo

    @property
    def h_n(self):
        """Gets the h_n of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_n of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_n

    @h_n.setter
    def h_n(self, h_n):
        """Sets the h_n of this SaveFedCalculatorDto.


        :param h_n: The h_n of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_n = h_n

    @property
    def h_p(self):
        """Gets the h_p of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_p of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_p

    @h_p.setter
    def h_p(self, h_p):
        """Sets the h_p of this SaveFedCalculatorDto.


        :param h_p: The h_p of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_p = h_p

    @property
    def h_zn(self):
        """Gets the h_zn of this SaveFedCalculatorDto.  # noqa: E501


        :return: The h_zn of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._h_zn

    @h_zn.setter
    def h_zn(self, h_zn):
        """Sets the h_zn of this SaveFedCalculatorDto.


        :param h_zn: The h_zn of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._h_zn = h_zn

    @property
    def mean(self):
        """Gets the mean of this SaveFedCalculatorDto.  # noqa: E501


        :return: The mean of this SaveFedCalculatorDto.  # noqa: E501
        :rtype: Optionalfloat
        """
        return self._mean

    @mean.setter
    def mean(self, mean):
        """Sets the mean of this SaveFedCalculatorDto.


        :param mean: The mean of this SaveFedCalculatorDto.  # noqa: E501
        :type: Optionalfloat
        """

        self._mean = mean

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SaveFedCalculatorDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SaveFedCalculatorDto):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SaveFedCalculatorDto):
            return True

        return self.to_dict() != other.to_dict()
